// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/config": {
            "get": {
                "description": "show service config data when the service environment set to debug mode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get config data on the debug mode",
                "operationId": "get_config",
                "responses": {
                    "200": {
                        "description": "Response data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/config.Config"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "this returns \"pong\" messsage to show service is working",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "returns \"pong\" message",
                "operationId": "ping",
                "responses": {
                    "200": {
                        "description": "Response data",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/analysis/{analysis_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve analysis data by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get Analysis By ID",
                "operationId": "get-analysis-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Analysis ID",
                        "name": "analysis_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.HRVAnalysisResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login User",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "login credentials",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Invalidate user's JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout User",
                "operationId": "logout",
                "parameters": [
                    {
                        "description": "logout request",
                        "name": "logout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register User",
                "operationId": "register-user",
                "parameters": [
                    {
                        "description": "user registration data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRegisterModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/profile/password": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update authenticated user's password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update User Password",
                "operationId": "update-password",
                "parameters": [
                    {
                        "description": "password data",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/profile/{user_id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve the profile of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Get Profile",
                "operationId": "get-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update authenticated user's profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "profile"
                ],
                "summary": "Update User Profile",
                "operationId": "update-profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "profile data",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProfileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/sensor-data": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Save sensor data for analysis",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Save Sensor Data",
                "operationId": "save-sensor-data",
                "parameters": [
                    {
                        "description": "Sensor data",
                        "name": "sensor_data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SensorData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        },
        "/v1/user-analysis": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieve all analysis data for a specific user within a date range",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "data"
                ],
                "summary": "Get User Analysis",
                "operationId": "get-user-analysis",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date in YYYY-MM-DD format",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date in YYYY-MM-DD format",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.UserHRVAnalysisResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_Ramazon1227_BeatSync_api_http.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "config.Config": {
            "type": "object",
            "properties": {
                "defaultLimit": {
                    "type": "string"
                },
                "defaultOffset": {
                    "type": "string"
                },
                "environment": {
                    "description": "debug, test, release",
                    "type": "string"
                },
                "httpport": {
                    "type": "string"
                },
                "httpscheme": {
                    "type": "string"
                },
                "influxBucket": {
                    "type": "string"
                },
                "influxDatabase": {
                    "type": "string"
                },
                "influxOrg": {
                    "type": "string"
                },
                "influxToken": {
                    "type": "string"
                },
                "influxURL": {
                    "type": "string"
                },
                "passcodeLength": {
                    "type": "integer"
                },
                "passcodePool": {
                    "type": "string"
                },
                "secretKey": {
                    "type": "string"
                },
                "serviceHost": {
                    "type": "string"
                },
                "serviceName": {
                    "type": "string"
                },
                "smtpfrom": {
                    "type": "string"
                },
                "smtphost": {
                    "description": "Email Configuration",
                    "type": "string"
                },
                "smtppassword": {
                    "type": "string"
                },
                "smtpport": {
                    "type": "integer"
                },
                "smtpusername": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "github_com_Ramazon1227_BeatSync_api_http.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "description": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.HRVAnalysisResult": {
            "type": "object",
            "properties": {
                "analysis_id": {
                    "description": "Unique identifier for the analysis",
                    "type": "string"
                },
                "analysis_time": {
                    "description": "Timestamp of when the analysis was performed",
                    "type": "string"
                },
                "hf": {
                    "type": "number"
                },
                "lf": {
                    "type": "number"
                },
                "lf_hf_ratio": {
                    "type": "number"
                },
                "nn50": {
                    "type": "integer"
                },
                "pnn50": {
                    "type": "number"
                },
                "rmssd": {
                    "type": "number"
                },
                "sd1": {
                    "type": "number"
                },
                "sd2": {
                    "type": "number"
                },
                "sdnn": {
                    "type": "number"
                },
                "user_id": {
                    "type": "string"
                },
                "vlf": {
                    "type": "number"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret123"
                }
            }
        },
        "models.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                }
            }
        },
        "models.LogoutRequest": {
            "type": "object",
            "required": [
                "token"
            ],
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "models.PPGData": {
            "type": "object",
            "required": [
                "timestamp",
                "value"
            ],
            "properties": {
                "timestamp": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "models.SensorData": {
            "type": "object",
            "required": [
                "data",
                "timestamp",
                "user_id"
            ],
            "properties": {
                "data": {
                    "description": "Heart rate value (e.g., beats per minute)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PPGData"
                    }
                },
                "device_id": {
                    "description": "Optional: Identifier for the specific device",
                    "type": "string"
                },
                "sensor_data_id": {
                    "description": "Unique identifier for the sensor data",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp of the reading",
                    "type": "string"
                },
                "user_id": {
                    "description": "Unique identifier for the user",
                    "type": "string"
                }
            }
        },
        "models.UpdatePasswordRequest": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string",
                    "example": "oldpassword123"
                },
                "new_password": {
                    "type": "string",
                    "example": "newpassword123"
                }
            }
        },
        "models.UpdateProfileRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "description": "Role      string  ` + "`" + `json:\"role\"` + "`" + `",
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "height": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "description": "Role      string     ` + "`" + `json:\"role\"` + "`" + `",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "weight": {
                    "type": "number"
                }
            }
        },
        "models.UserHRVAnalysisResponse": {
            "type": "object",
            "properties": {
                "analysis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.HRVAnalysisResult"
                    }
                },
                "count": {
                    "type": "integer"
                }
            }
        },
        "models.UserRegisterModel": {
            "type": "object",
            "required": [
                "confirm_password",
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "confirm_password": {
                    "type": "string",
                    "minLength": 8
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Enter the token with Bearer prefix, e.g. \"Bearer abcde12345\"",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "134.209.242.15:8080",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "BeatSync API",
	Description:      "This is an api gateway",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
